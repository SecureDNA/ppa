#!/bin/bash

### This script signs a .deb.  It expects that you've unzipped the artifacts-deb.zip
### file *into the .deb directory in the PPA repo*.  If you're still sitting in that
### directory, it does the right thing; if you're instead at toplevel in the repo,
### it also does the right thing.
###
### The keyring with the key in it should be in a .gnupg directory and defaults to $HOME/.gnupg,
### but you can specify an alternate location via optional $1, aka somewhere/.gnupg.something.
### (In other words, $1 is actually *the complete path to the relevant .gnupg directory*, not
### the directory which itself contains a directory called .gnupg.)

set -e

HOMEDIR="${1:-$HOME/.gnupg}"
KEYNAME="packaging@securedna.org"

mygpg()  { gpg --pinentry-mode loopback --homedir "$HOMEDIR" --default-key "${KEYNAME}" "$@"; }

## In a subprocess so as not to side-effect cwd.
(
    # Don't fuss over where we're run from.
    if [[ "$(basename "$(pwd)")" != "deb" ]]; then cd deb; fi	# If this isn't right, "set -e" ensures we bail.

    # Packages & Packages.gz
    dpkg-scanpackages --multiversion . > Packages
    gzip --keep --force Packages

    # Release, Release.gpg & InRelease
    apt-ftparchive release . > Release
    mygpg --armor --detach-sign --sign --output - Release > Release.gpg
    mygpg --clearsign                  --output - Release > InRelease
)
